#ifndef __cocos2dx_gui_h__
#define __cocos2dx_gui_h__

#include "jsapi.h"
#include "jsfriendapi.h"


extern JSClass  *jsb_UILayoutParameter_class;
extern JSObject *jsb_UILayoutParameter_prototype;

JSBool js_cocos2dx_gui_UILayoutParameter_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_gui_UILayoutParameter_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_gui_UILayoutParameter(JSContext *cx, JSObject *global);
void register_all_cocos2dx_gui(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_gui_UILayoutParameter_getLayoutType(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UILayoutParameter_create(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UILayoutParameter_UILayoutParameter(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_UILinearLayoutParameter_class;
extern JSObject *jsb_UILinearLayoutParameter_prototype;

JSBool js_cocos2dx_gui_UILinearLayoutParameter_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_gui_UILinearLayoutParameter_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_gui_UILinearLayoutParameter(JSContext *cx, JSObject *global);
void register_all_cocos2dx_gui(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_gui_UILinearLayoutParameter_setGravity(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UILinearLayoutParameter_getGravity(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UILinearLayoutParameter_create(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UILinearLayoutParameter_UILinearLayoutParameter(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_UIRelativeLayoutParameter_class;
extern JSObject *jsb_UIRelativeLayoutParameter_prototype;

JSBool js_cocos2dx_gui_UIRelativeLayoutParameter_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_gui_UIRelativeLayoutParameter_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_gui_UIRelativeLayoutParameter(JSContext *cx, JSObject *global);
void register_all_cocos2dx_gui(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_gui_UIRelativeLayoutParameter_setAlign(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIRelativeLayoutParameter_setRelativeToWidgetName(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIRelativeLayoutParameter_getRelativeName(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIRelativeLayoutParameter_getRelativeToWidgetName(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIRelativeLayoutParameter_setRelativeName(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIRelativeLayoutParameter_getAlign(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIRelativeLayoutParameter_create(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIRelativeLayoutParameter_UIRelativeLayoutParameter(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_UIWidget_class;
extern JSObject *jsb_UIWidget_prototype;

JSBool js_cocos2dx_gui_UIWidget_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_gui_UIWidget_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_gui_UIWidget(JSContext *cx, JSObject *global);
void register_all_cocos2dx_gui(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_gui_UIWidget_addChild(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_getVirtualRenderer(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_setActionTag(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_getDescription(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_setCascadeOpacityEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_getChildren(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_getPositionType(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_getChildByName(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_isEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_isFlipX(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_isFlipY(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_didNotSelectSelf(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_setFocused(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_setZOrder(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_setScaleY(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_setScaleX(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_getLayoutParameter(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_getColor(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_isBright(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_getTag(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_addRenderer(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_getSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_getSizeType(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_getPositionPercent(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_removeChild(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_convertToWorldSpace(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_setSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_removeAllChildren(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_getRotationX(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_getRotationY(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_getSizePercent(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_setPositionType(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_isCascadeOpacityEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_setParent(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_getName(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_isTouchEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_setTouchEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_setLayoutParameter(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_clippingParentAreaContainPoint(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_setPosition(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_removeRenderer(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_stopActionByTag(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_reorderChild(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_getScale(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_setColor(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_getAnchorPoint(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_isFocused(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_isVisible(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_setAnchorPoint(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_getLeftInParent(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_setPositionPercent(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_getRotation(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_getBottomInParent(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_ignoreContentAdaptWithSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_getZOrder(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_runAction(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_stopAllActions(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_getActionTag(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_getActionByTag(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_setRotationX(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_setRotationY(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_setBrightStyle(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_setName(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_setFlipY(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_setFlipX(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_setUpdateEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_setRotation(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_setActionManager(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_getPosition(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_getParent(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_hitTest(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_setVisible(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_setSizePercent(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_setEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_setScale(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_getTouchEndPos(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_getChildByTag(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_isIgnoreContentAdaptWithSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_isUpdateEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_updateSizeAndPosition(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_getRenderer(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_getWidgetType(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_getScaleY(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_getScaleX(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_setCascadeColorEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_setOpacity(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_getContentSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_getOpacity(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_getTouchMovePos(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_removeFromParent(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_getWorldPosition(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_clone(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_isCascadeColorEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_checkChildInfo(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_getTopInParent(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_getRightInParent(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_setTag(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_getTouchStartPos(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_setSizeType(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_stopAction(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_setBright(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_getActionManager(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_create(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIWidget_UIWidget(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_UILayout_class;
extern JSObject *jsb_UILayout_prototype;

JSBool js_cocos2dx_gui_UILayout_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_gui_UILayout_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_gui_UILayout(JSContext *cx, JSObject *global);
void register_all_cocos2dx_gui(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_gui_UILayout_setBackGroundColorVector(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UILayout_isClippingEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UILayout_getBackGroundImageTextureSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UILayout_getLayoutType(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UILayout_setColor(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UILayout_setBackGroundColorType(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UILayout_setBackGroundImage(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UILayout_setBackGroundColor(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UILayout_getDescription(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UILayout_setOpacity(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UILayout_hitTest(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UILayout_setBackGroundColorOpacity(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UILayout_setBackGroundImageCapInsets(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UILayout_addChild(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UILayout_removeBackGroundImage(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UILayout_setBackGroundImageScale9Enabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UILayout_doLayout(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UILayout_setClippingEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UILayout_getContentSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UILayout_setLayoutType(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UILayout_create(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UILayout_UILayout(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_UIButton_class;
extern JSObject *jsb_UIButton_prototype;

JSBool js_cocos2dx_gui_UIButton_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_gui_UIButton_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_gui_UIButton(JSContext *cx, JSObject *global);
void register_all_cocos2dx_gui(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_gui_UIButton_setAnchorPoint(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIButton_getVirtualRenderer(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIButton_getTitleText(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIButton_setTitleFontSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIButton_getDescription(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIButton_setScale9Enabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIButton_setTitleColor(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIButton_ignoreContentAdaptWithSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIButton_setCapInsetsDisabledRenderer(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIButton_isFlipX(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIButton_isFlipY(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIButton_loadTextureDisabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIButton_getContentSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIButton_setTitleText(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIButton_setCapInsetsNormalRenderer(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIButton_loadTexturePressed(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIButton_setFlipY(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIButton_setFlipX(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIButton_setTitleFontName(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIButton_loadTextures(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIButton_getTitleColor(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIButton_loadTextureNormal(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIButton_setColor(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIButton_setCapInsetsPressedRenderer(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIButton_getTitleFontSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIButton_getTitleFontName(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIButton_setCapInsets(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIButton_setPressedActionEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIButton_create(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIButton_UIButton(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_UICheckBox_class;
extern JSObject *jsb_UICheckBox_prototype;

JSBool js_cocos2dx_gui_UICheckBox_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_gui_UICheckBox_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_gui_UICheckBox(JSContext *cx, JSObject *global);
void register_all_cocos2dx_gui(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_gui_UICheckBox_setAnchorPoint(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UICheckBox_getSelectedState(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UICheckBox_loadTextureBackGroundSelected(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UICheckBox_loadTextureBackGroundDisabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UICheckBox_getDescription(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UICheckBox_setFlipY(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UICheckBox_setFlipX(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UICheckBox_isFlipX(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UICheckBox_isFlipY(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UICheckBox_loadTextureFrontCross(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UICheckBox_getVirtualRenderer(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UICheckBox_getContentSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UICheckBox_loadTextures(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UICheckBox_loadTextureBackGround(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UICheckBox_setSelectedState(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UICheckBox_loadTextureFrontCrossDisabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UICheckBox_create(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UICheckBox_UICheckBox(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_UIImageView_class;
extern JSObject *jsb_UIImageView_prototype;

JSBool js_cocos2dx_gui_UIImageView_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_gui_UIImageView_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_gui_UIImageView(JSContext *cx, JSObject *global);
void register_all_cocos2dx_gui(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_gui_UIImageView_setAnchorPoint(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIImageView_getVirtualRenderer(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIImageView_ignoreContentAdaptWithSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIImageView_loadTexture(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIImageView_setDoubleClickEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIImageView_getDescription(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIImageView_setFlipY(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIImageView_setFlipX(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIImageView_isFlipX(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIImageView_isFlipY(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIImageView_setScale9Enabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIImageView_setTextureRect(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIImageView_setCapInsets(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIImageView_getContentSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIImageView_create(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIImageView_UIImageView(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_UILabel_class;
extern JSObject *jsb_UILabel_prototype;

JSBool js_cocos2dx_gui_UILabel_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_gui_UILabel_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_gui_UILabel(JSContext *cx, JSObject *global);
void register_all_cocos2dx_gui(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_gui_UILabel_setAnchorPoint(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UILabel_getVirtualRenderer(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UILabel_getStringValue(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UILabel_getDescription(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UILabel_setScale(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UILabel_setTextVerticalAlignment(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UILabel_setFontName(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UILabel_setTouchScaleChangeEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UILabel_isFlipX(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UILabel_isFlipY(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UILabel_getContentSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UILabel_isTouchScaleChangeEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UILabel_setTextAreaSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UILabel_getStringLength(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UILabel_setScaleY(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UILabel_setScaleX(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UILabel_setFlipY(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UILabel_setFlipX(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UILabel_setFontSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UILabel_setText(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UILabel_setTextHorizontalAlignment(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UILabel_create(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UILabel_UILabel(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_UILabelAtlas_class;
extern JSObject *jsb_UILabelAtlas_prototype;

JSBool js_cocos2dx_gui_UILabelAtlas_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_gui_UILabelAtlas_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_gui_UILabelAtlas(JSContext *cx, JSObject *global);
void register_all_cocos2dx_gui(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_gui_UILabelAtlas_setAnchorPoint(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UILabelAtlas_getVirtualRenderer(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UILabelAtlas_getStringValue(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UILabelAtlas_getDescription(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UILabelAtlas_getContentSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UILabelAtlas_setProperty(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UILabelAtlas_setStringValue(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UILabelAtlas_create(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UILabelAtlas_UILabelAtlas(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_UILoadingBar_class;
extern JSObject *jsb_UILoadingBar_prototype;

JSBool js_cocos2dx_gui_UILoadingBar_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_gui_UILoadingBar_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_gui_UILoadingBar(JSContext *cx, JSObject *global);
void register_all_cocos2dx_gui(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_gui_UILoadingBar_setPercent(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UILoadingBar_getVirtualRenderer(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UILoadingBar_ignoreContentAdaptWithSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UILoadingBar_loadTexture(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UILoadingBar_setDirection(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UILoadingBar_getDescription(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UILoadingBar_setScale9Enabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UILoadingBar_setCapInsets(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UILoadingBar_getDirection(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UILoadingBar_getContentSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UILoadingBar_getPercent(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UILoadingBar_create(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UILoadingBar_UILoadingBar(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_UIScrollView_class;
extern JSObject *jsb_UIScrollView_prototype;

JSBool js_cocos2dx_gui_UIScrollView_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_gui_UIScrollView_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_gui_UIScrollView(JSContext *cx, JSObject *global);
void register_all_cocos2dx_gui(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_gui_UIScrollView_addChild(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIScrollView_scrollToTop(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIScrollView_scrollToPercentHorizontal(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIScrollView_getDescription(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIScrollView_removeAllChildren(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIScrollView_scrollToPercentBothDirection(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIScrollView_getChildren(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIScrollView_getDirection(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIScrollView_scrollToBottomLeft(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIScrollView_getInnerContainer(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIScrollView_jumpToBottom(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIScrollView_setDirection(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIScrollView_scrollToTopLeft(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIScrollView_jumpToTopRight(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIScrollView_jumpToBottomLeft(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIScrollView_setInnerContainerSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIScrollView_isInertiaScrollEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIScrollView_getInnerContainerSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIScrollView_isBounceEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIScrollView_jumpToPercentVertical(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIScrollView_doLayout(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIScrollView_setInertiaScrollEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIScrollView_jumpToTopLeft(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIScrollView_jumpToPercentHorizontal(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIScrollView_jumpToBottomRight(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIScrollView_update(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIScrollView_getLayoutType(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIScrollView_setBounceEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIScrollView_jumpToTop(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIScrollView_scrollToLeft(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIScrollView_jumpToPercentBothDirection(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIScrollView_scrollToPercentVertical(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIScrollView_scrollToBottom(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIScrollView_scrollToBottomRight(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIScrollView_jumpToLeft(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIScrollView_scrollToRight(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIScrollView_removeChild(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIScrollView_setLayoutType(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIScrollView_jumpToRight(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIScrollView_scrollToTopRight(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIScrollView_create(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIScrollView_UIScrollView(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_UIListView_class;
extern JSObject *jsb_UIListView_prototype;

JSBool js_cocos2dx_gui_UIListView_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_gui_UIListView_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_gui_UIListView(JSContext *cx, JSObject *global);
void register_all_cocos2dx_gui(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_gui_UIListView_getIndex(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIListView_setGravity(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIListView_pushBackCustomItem(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIListView_setDirection(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIListView_getItems(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIListView_getDescription(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIListView_removeItem(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIListView_getCurSelectedIndex(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIListView_insertDefaultItem(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIListView_setItemsMargin(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIListView_refreshView(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIListView_removeLastItem(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIListView_getItem(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIListView_setItemModel(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIListView_pushBackDefaultItem(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIListView_insertCustomItem(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIListView_create(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIListView_UIListView(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_UISlider_class;
extern JSObject *jsb_UISlider_prototype;

JSBool js_cocos2dx_gui_UISlider_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_gui_UISlider_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_gui_UISlider(JSContext *cx, JSObject *global);
void register_all_cocos2dx_gui(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_gui_UISlider_setPercent(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UISlider_loadSlidBallTextureNormal(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UISlider_loadBarTexture(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UISlider_loadProgressBarTexture(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UISlider_loadSlidBallTextures(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UISlider_setCapInsetProgressBarRebderer(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UISlider_setCapInsetsBarRenderer(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UISlider_getDescription(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UISlider_setScale9Enabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UISlider_getVirtualRenderer(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UISlider_setCapInsets(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UISlider_ignoreContentAdaptWithSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UISlider_loadSlidBallTexturePressed(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UISlider_loadSlidBallTextureDisabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UISlider_getContentSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UISlider_getPercent(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UISlider_create(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UISlider_UISlider(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_UITextField_class;
extern JSObject *jsb_UITextField_prototype;

JSBool js_cocos2dx_gui_UITextField_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_gui_UITextField_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_gui_UITextField(JSContext *cx, JSObject *global);
void register_all_cocos2dx_gui(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_gui_UITextField_setAnchorPoint(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UITextField_setAttachWithIME(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UITextField_getStringValue(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UITextField_getDescription(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UITextField_getVirtualRenderer(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UITextField_getDeleteBackward(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UITextField_getAttachWithIME(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UITextField_setFontName(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UITextField_getInsertText(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UITextField_initRenderer(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UITextField_getDetachWithIME(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UITextField_setOpacity(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UITextField_init(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UITextField_getContentSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UITextField_didNotSelectSelf(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UITextField_isPasswordEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UITextField_attachWithIME(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UITextField_setPasswordEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UITextField_update(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UITextField_setMaxLengthEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UITextField_setPasswordStyleText(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UITextField_setFontSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UITextField_setPlaceHolder(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UITextField_setColor(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UITextField_getMaxLength(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UITextField_isMaxLengthEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UITextField_setDetachWithIME(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UITextField_setText(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UITextField_setInsertText(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UITextField_setMaxLength(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UITextField_setTouchSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UITextField_setDeleteBackward(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UITextField_create(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UITextField_UITextField(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_UILabelBMFont_class;
extern JSObject *jsb_UILabelBMFont_prototype;

JSBool js_cocos2dx_gui_UILabelBMFont_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_gui_UILabelBMFont_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_gui_UILabelBMFont(JSContext *cx, JSObject *global);
void register_all_cocos2dx_gui(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_gui_UILabelBMFont_setAnchorPoint(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UILabelBMFont_getVirtualRenderer(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UILabelBMFont_getStringValue(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UILabelBMFont_setText(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UILabelBMFont_getDescription(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UILabelBMFont_getContentSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UILabelBMFont_setFntFile(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UILabelBMFont_create(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UILabelBMFont_UILabelBMFont(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_UIPageView_class;
extern JSObject *jsb_UIPageView_prototype;

JSBool js_cocos2dx_gui_UIPageView_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_gui_UIPageView_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_gui_UIPageView(JSContext *cx, JSObject *global);
void register_all_cocos2dx_gui(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_gui_UIPageView_getLayoutType(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIPageView_getCurPageIndex(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIPageView_addWidgetToPage(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIPageView_getPage(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIPageView_removePage(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIPageView_getDescription(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIPageView_insertPage(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIPageView_setLayoutType(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIPageView_scrollToPage(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIPageView_update(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIPageView_doLayout(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIPageView_removePageAtIndex(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIPageView_getPages(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIPageView_removeAllPages(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIPageView_addPage(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIPageView_create(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIPageView_UIPageView(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_UIHelper_class;
extern JSObject *jsb_UIHelper_prototype;

JSBool js_cocos2dx_gui_UIHelper_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_gui_UIHelper_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_gui_UIHelper(JSContext *cx, JSObject *global);
void register_all_cocos2dx_gui(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_gui_UIHelper_seekActionWidgetByActionTag(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIHelper_seekWidgetByTag(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIHelper_seekWidgetByRelativeName(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UIHelper_seekWidgetByName(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_UILayer_class;
extern JSObject *jsb_UILayer_prototype;

JSBool js_cocos2dx_gui_UILayer_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_gui_UILayer_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_gui_UILayer(JSContext *cx, JSObject *global);
void register_all_cocos2dx_gui(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_gui_UILayer_getRootWidget(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UILayer_getWidgetByTag(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UILayer_removeWidget(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UILayer_init(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UILayer_getWidgetByName(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UILayer_addWidget(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UILayer_setVisible(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UILayer_clear(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UILayer_create(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_gui_UILayer_UILayer(JSContext *cx, uint32_t argc, jsval *vp);
#endif

